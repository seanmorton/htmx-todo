package templates

import (
  "fmt"

  "github.com/seanmorton/todo-htmx/internal/domain"
)

templ TaskForm(task domain.Task, projects []domain.Project) {
  if task.Id == 0 {
    <form hx-post="/tasks">
      @TaskFields(task, projects)
      <button type="submit">Create</button>
    </form>
  } else {
    <form hx-put={ fmt.Sprintf("/tasks/%d", task.Id) }>
      @TaskFields(task, projects)
      <button type="submit">Update</button>
    </form>
  }
}

templ TaskFields(task domain.Task, projects []domain.Project) {
    <label>Title</label>
    <input type="text" name="title" value={ task.Title } />

    <label>Project</label>
    <select name="projectId">
      <option value="">--</option>
      for _, project := range projects {
        if task.ProjectId != nil && *task.ProjectId == project.Id {
          <option value={ fmt.Sprintf("%d", project.Id) } selected>{ project.Name }</option>
        } else {
          <option value={ fmt.Sprintf("%d", project.Id) }>{ project.Name }</option>
        }
      }
    </select>

    <label>Description</label>
    if task.Description != nil {
      <input type="text" name="description" value={ *task.Description } />
    } else {
      <input type="text" name="description" />
    }

    <label>DueDate</label>
    if task.DueDate != nil {
      <input type="date" name="dueDate" value={ task.DueDateStr() } />
    } else {
      <input type="date" name="dueDate" />
    }
}
